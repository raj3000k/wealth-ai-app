{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/lib/arcjet.js"],"sourcesContent":["import arcjet, { tokenBucket } from \"@arcjet/next\";\n\nconst aj = arcjet({\n  key: process.env.ARCJET_KEY,\n  characteristics: [\"userId\"], // Track based on Clerk userId\n  rules: [\n    // Rate limiting specifically for collection creation\n    tokenBucket({\n      mode: \"LIVE\",\n      refillRate: 10, // 10 collections\n      interval: 3600, // per hour\n      capacity: 10, // maximum burst capacity\n    }),\n  ],\n});\n\nexport default aj;\n"],"names":[],"mappings":";;;AAAA;AAAA;AAAA;;AAEA,MAAM,KAAK,CAAA,GAAA,yJAAA,CAAA,UAAM,AAAD,EAAE;IAChB,KAAK,QAAQ,GAAG,CAAC,UAAU;IAC3B,iBAAiB;QAAC;KAAS;IAC3B,OAAO;QACL,qDAAqD;QACrD,CAAA,GAAA,+IAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,YAAY;YACZ,UAAU;YACV,UAAU;QACZ;KACD;AACH;uCAEe"}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/actions/dashboard.js"],"sourcesContent":["\"use server\";\n\nimport aj from \"@/lib/arcjet\";\nimport { db } from \"@/lib/prisma\";\nimport { request } from \"@arcjet/next\";\nimport { auth } from \"@clerk/nextjs/server\";\nimport { revalidatePath } from \"next/cache\";\n\nconst serializeTransaction = (obj) => {\n  const serialized = { ...obj };\n  if (obj.balance) {\n    serialized.balance = obj.balance.toNumber();\n  }\n  if (obj.amount) {\n    serialized.amount = obj.amount.toNumber();\n  }\n  return serialized;\n};\n\nexport async function getUserAccounts() {\n  const { userId } = await auth();\n  if (!userId) throw new Error(\"Unauthorized\");\n\n  const user = await db.user.findUnique({\n    where: { clerkUserId: userId },\n  });\n\n  if (!user) {\n    throw new Error(\"User not found\");\n  }\n\n  try {\n    const accounts = await db.account.findMany({\n      where: { userId: user.id },\n      orderBy: { createdAt: \"desc\" },\n      include: {\n        _count: {\n          select: {\n            transactions: true,\n          },\n        },\n      },\n    });\n\n    // Serialize accounts before sending to client\n    const serializedAccounts = accounts.map(serializeTransaction);\n\n    return serializedAccounts;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport async function createAccount(data) {\n  try {\n    const { userId } = await auth();\n    if (!userId) throw new Error(\"Unauthorized\");\n\n    // Get request data for ArcJet\n    const req = await request();\n\n    // Check rate limit\n    const decision = await aj.protect(req, {\n      userId,\n      requested: 1, // Specify how many tokens to consume\n    });\n\n    if (decision.isDenied()) {\n      if (decision.reason.isRateLimit()) {\n        const { remaining, reset } = decision.reason;\n        console.error({\n          code: \"RATE_LIMIT_EXCEEDED\",\n          details: {\n            remaining,\n            resetInSeconds: reset,\n          },\n        });\n\n        throw new Error(\"Too many requests. Please try again later.\");\n      }\n\n      throw new Error(\"Request blocked\");\n    }\n\n    const user = await db.user.findUnique({\n      where: { clerkUserId: userId },\n    });\n\n    if (!user) {\n      throw new Error(\"User not found\");\n    }\n\n    // Convert balance to float before saving\n    const balanceFloat = parseFloat(data.balance);\n    if (isNaN(balanceFloat)) {\n      throw new Error(\"Invalid balance amount\");\n    }\n\n    // Check if this is the user's first account\n    const existingAccounts = await db.account.findMany({\n      where: { userId: user.id },\n    });\n\n    // If it's the first account, make it default regardless of user input\n    // If not, use the user's preference\n    const shouldBeDefault =\n      existingAccounts.length === 0 ? true : data.isDefault;\n\n    // If this account should be default, unset other default accounts\n    if (shouldBeDefault) {\n      await db.account.updateMany({\n        where: { userId: user.id, isDefault: true },\n        data: { isDefault: false },\n      });\n    }\n\n    // Create new account\n    const account = await db.account.create({\n      data: {\n        ...data,\n        balance: balanceFloat,\n        userId: user.id,\n        isDefault: shouldBeDefault, // Override the isDefault based on our logic\n      },\n    });\n\n    // Serialize the account before returning\n    const serializedAccount = serializeTransaction(account);\n\n    revalidatePath(\"/dashboard\");\n    return { success: true, data: serializedAccount };\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport async function getDashboardData() {\n  const { userId } = await auth();\n  if (!userId) throw new Error(\"Unauthorized\");\n\n  const user = await db.user.findUnique({\n    where: { clerkUserId: userId },\n  });\n\n  if (!user) {\n    throw new Error(\"User not found\");\n  }\n\n  // Get all user transactions\n  const transactions = await db.transaction.findMany({\n    where: { userId: user.id },\n    orderBy: { date: \"desc\" },\n  });\n\n  return transactions.map(serializeTransaction);\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 413, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/data/categories.js"],"sourcesContent":["export const defaultCategories = [\n  // Income Categories\n  {\n    id: \"salary\",\n    name: \"Salary\",\n    type: \"INCOME\",\n    color: \"#22c55e\", // green-500\n    icon: \"Wallet\",\n  },\n  {\n    id: \"freelance\",\n    name: \"Freelance\",\n    type: \"INCOME\",\n    color: \"#06b6d4\", // cyan-500\n    icon: \"Laptop\",\n  },\n  {\n    id: \"investments\",\n    name: \"Investments\",\n    type: \"INCOME\",\n    color: \"#6366f1\", // indigo-500\n    icon: \"TrendingUp\",\n  },\n  {\n    id: \"business\",\n    name: \"Business\",\n    type: \"INCOME\",\n    color: \"#ec4899\", // pink-500\n    icon: \"Building\",\n  },\n  {\n    id: \"rental\",\n    name: \"Rental\",\n    type: \"INCOME\",\n    color: \"#f59e0b\", // amber-500\n    icon: \"Home\",\n  },\n  {\n    id: \"other-income\",\n    name: \"Other Income\",\n    type: \"INCOME\",\n    color: \"#64748b\", // slate-500\n    icon: \"Plus\",\n  },\n\n  // Expense Categories\n  {\n    id: \"housing\",\n    name: \"Housing\",\n    type: \"EXPENSE\",\n    color: \"#ef4444\", // red-500\n    icon: \"Home\",\n    subcategories: [\"Rent\", \"Mortgage\", \"Property Tax\", \"Maintenance\"],\n  },\n  {\n    id: \"transportation\",\n    name: \"Transportation\",\n    type: \"EXPENSE\",\n    color: \"#f97316\", // orange-500\n    icon: \"Car\",\n    subcategories: [\"Fuel\", \"Public Transport\", \"Maintenance\", \"Parking\"],\n  },\n  {\n    id: \"groceries\",\n    name: \"Groceries\",\n    type: \"EXPENSE\",\n    color: \"#84cc16\", // lime-500\n    icon: \"Shopping\",\n  },\n  {\n    id: \"utilities\",\n    name: \"Utilities\",\n    type: \"EXPENSE\",\n    color: \"#06b6d4\", // cyan-500\n    icon: \"Zap\",\n    subcategories: [\"Electricity\", \"Water\", \"Gas\", \"Internet\", \"Phone\"],\n  },\n  {\n    id: \"entertainment\",\n    name: \"Entertainment\",\n    type: \"EXPENSE\",\n    color: \"#8b5cf6\", // violet-500\n    icon: \"Film\",\n    subcategories: [\"Movies\", \"Games\", \"Streaming Services\"],\n  },\n  {\n    id: \"food\",\n    name: \"Food\",\n    type: \"EXPENSE\",\n    color: \"#f43f5e\", // rose-500\n    icon: \"UtensilsCrossed\",\n  },\n  {\n    id: \"shopping\",\n    name: \"Shopping\",\n    type: \"EXPENSE\",\n    color: \"#ec4899\", // pink-500\n    icon: \"ShoppingBag\",\n    subcategories: [\"Clothing\", \"Electronics\", \"Home Goods\"],\n  },\n  {\n    id: \"healthcare\",\n    name: \"Healthcare\",\n    type: \"EXPENSE\",\n    color: \"#14b8a6\", // teal-500\n    icon: \"HeartPulse\",\n    subcategories: [\"Medical\", \"Dental\", \"Pharmacy\", \"Insurance\"],\n  },\n  {\n    id: \"education\",\n    name: \"Education\",\n    type: \"EXPENSE\",\n    color: \"#6366f1\", // indigo-500\n    icon: \"GraduationCap\",\n    subcategories: [\"Tuition\", \"Books\", \"Courses\"],\n  },\n  {\n    id: \"personal\",\n    name: \"Personal Care\",\n    type: \"EXPENSE\",\n    color: \"#d946ef\", // fuchsia-500\n    icon: \"Smile\",\n    subcategories: [\"Haircut\", \"Gym\", \"Beauty\"],\n  },\n  {\n    id: \"travel\",\n    name: \"Travel\",\n    type: \"EXPENSE\",\n    color: \"#0ea5e9\", // sky-500\n    icon: \"Plane\",\n  },\n  {\n    id: \"insurance\",\n    name: \"Insurance\",\n    type: \"EXPENSE\",\n    color: \"#64748b\", // slate-500\n    icon: \"Shield\",\n    subcategories: [\"Life\", \"Home\", \"Vehicle\"],\n  },\n  {\n    id: \"gifts\",\n    name: \"Gifts & Donations\",\n    type: \"EXPENSE\",\n    color: \"#f472b6\", // pink-400\n    icon: \"Gift\",\n  },\n  {\n    id: \"bills\",\n    name: \"Bills & Fees\",\n    type: \"EXPENSE\",\n    color: \"#fb7185\", // rose-400\n    icon: \"Receipt\",\n    subcategories: [\"Bank Fees\", \"Late Fees\", \"Service Charges\"],\n  },\n  {\n    id: \"other-expense\",\n    name: \"Other Expenses\",\n    type: \"EXPENSE\",\n    color: \"#94a3b8\", // slate-400\n    icon: \"MoreHorizontal\",\n  },\n];\n\nexport const categoryColors = defaultCategories.reduce((acc, category) => {\n  acc[category.id] = category.color;\n  return acc;\n}, {});\n"],"names":[],"mappings":";;;;AAAO,MAAM,oBAAoB;IAC/B,oBAAoB;IACpB;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;IACR;IAEA,qBAAqB;IACrB;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;QACN,eAAe;YAAC;YAAQ;YAAY;YAAgB;SAAc;IACpE;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;QACN,eAAe;YAAC;YAAQ;YAAoB;YAAe;SAAU;IACvE;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;QACN,eAAe;YAAC;YAAe;YAAS;YAAO;YAAY;SAAQ;IACrE;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;QACN,eAAe;YAAC;YAAU;YAAS;SAAqB;IAC1D;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;QACN,eAAe;YAAC;YAAY;YAAe;SAAa;IAC1D;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;QACN,eAAe;YAAC;YAAW;YAAU;YAAY;SAAY;IAC/D;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;QACN,eAAe;YAAC;YAAW;YAAS;SAAU;IAChD;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;QACN,eAAe;YAAC;YAAW;YAAO;SAAS;IAC7C;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;QACN,eAAe;YAAC;YAAQ;YAAQ;SAAU;IAC5C;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;QACN,eAAe;YAAC;YAAa;YAAa;SAAkB;IAC9D;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;IACR;CACD;AAEM,MAAM,iBAAiB,kBAAkB,MAAM,CAAC,CAAC,KAAK;IAC3D,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,SAAS,KAAK;IACjC,OAAO;AACT,GAAG,CAAC"}},
    {"offset": {"line": 633, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 639, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/app/%28main%29/transaction/_components/transaction-form.jsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AddTransactionForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call AddTransactionForm() from the server but AddTransactionForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/transaction/_components/transaction-form.jsx <module evaluation>\",\n    \"AddTransactionForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,yFACA"}},
    {"offset": {"line": 647, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 653, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/app/%28main%29/transaction/_components/transaction-form.jsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AddTransactionForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call AddTransactionForm() from the server but AddTransactionForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/transaction/_components/transaction-form.jsx\",\n    \"AddTransactionForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,qEACA"}},
    {"offset": {"line": 661, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 667, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 671, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 677, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/actions/transaction.js"],"sourcesContent":["\"use server\";\n\nimport { auth } from \"@clerk/nextjs/server\";\nimport { db } from \"@/lib/prisma\";\nimport { revalidatePath } from \"next/cache\";\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\nimport aj from \"@/lib/arcjet\";\nimport { request } from \"@arcjet/next\";\n\nconst genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);\n\nconst serializeAmount = (obj) => ({\n  ...obj,\n  amount: obj.amount.toNumber(),\n});\n\n// Create Transaction\nexport async function createTransaction(data) {\n  try {\n    const { userId } = await auth();\n    if (!userId) throw new Error(\"Unauthorized\");\n\n    // Get request data for ArcJet\n    const req = await request();\n\n    // Check rate limit\n    const decision = await aj.protect(req, {\n      userId,\n      requested: 1, // Specify how many tokens to consume\n    });\n\n    if (decision.isDenied()) {\n      if (decision.reason.isRateLimit()) {\n        const { remaining, reset } = decision.reason;\n        console.error({\n          code: \"RATE_LIMIT_EXCEEDED\",\n          details: {\n            remaining,\n            resetInSeconds: reset,\n          },\n        });\n\n        throw new Error(\"Too many requests. Please try again later.\");\n      }\n\n      throw new Error(\"Request blocked\");\n    }\n\n    const user = await db.user.findUnique({\n      where: { clerkUserId: userId },\n    });\n\n    if (!user) {\n      throw new Error(\"User not found\");\n    }\n\n    const account = await db.account.findUnique({\n      where: {\n        id: data.accountId,\n        userId: user.id,\n      },\n    });\n\n    if (!account) {\n      throw new Error(\"Account not found\");\n    }\n\n    // Calculate new balance\n    const balanceChange = data.type === \"EXPENSE\" ? -data.amount : data.amount;\n    const newBalance = account.balance.toNumber() + balanceChange;\n\n    // Create transaction and update account balance\n    const transaction = await db.$transaction(async (tx) => {\n      const newTransaction = await tx.transaction.create({\n        data: {\n          ...data,\n          userId: user.id,\n          nextRecurringDate:\n            data.isRecurring && data.recurringInterval\n              ? calculateNextRecurringDate(data.date, data.recurringInterval)\n              : null,\n        },\n      });\n\n      await tx.account.update({\n        where: { id: data.accountId },\n        data: { balance: newBalance },\n      });\n\n      return newTransaction;\n    });\n\n    revalidatePath(\"/dashboard\");\n    revalidatePath(`/account/${transaction.accountId}`);\n\n    return { success: true, data: serializeAmount(transaction) };\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport async function getTransaction(id) {\n  const { userId } = await auth();\n  if (!userId) throw new Error(\"Unauthorized\");\n\n  const user = await db.user.findUnique({\n    where: { clerkUserId: userId },\n  });\n\n  if (!user) throw new Error(\"User not found\");\n\n  const transaction = await db.transaction.findUnique({\n    where: {\n      id,\n      userId: user.id,\n    },\n  });\n\n  if (!transaction) throw new Error(\"Transaction not found\");\n\n  return serializeAmount(transaction);\n}\n\nexport async function updateTransaction(id, data) {\n  try {\n    const { userId } = await auth();\n    if (!userId) throw new Error(\"Unauthorized\");\n\n    const user = await db.user.findUnique({\n      where: { clerkUserId: userId },\n    });\n\n    if (!user) throw new Error(\"User not found\");\n\n    // Get original transaction to calculate balance change\n    const originalTransaction = await db.transaction.findUnique({\n      where: {\n        id,\n        userId: user.id,\n      },\n      include: {\n        account: true,\n      },\n    });\n\n    if (!originalTransaction) throw new Error(\"Transaction not found\");\n\n    // Calculate balance changes\n    const oldBalanceChange =\n      originalTransaction.type === \"EXPENSE\"\n        ? -originalTransaction.amount.toNumber()\n        : originalTransaction.amount.toNumber();\n\n    const newBalanceChange =\n      data.type === \"EXPENSE\" ? -data.amount : data.amount;\n\n    const netBalanceChange = newBalanceChange - oldBalanceChange;\n\n    // Update transaction and account balance in a transaction\n    const transaction = await db.$transaction(async (tx) => {\n      const updated = await tx.transaction.update({\n        where: {\n          id,\n          userId: user.id,\n        },\n        data: {\n          ...data,\n          nextRecurringDate:\n            data.isRecurring && data.recurringInterval\n              ? calculateNextRecurringDate(data.date, data.recurringInterval)\n              : null,\n        },\n      });\n\n      // Update account balance\n      await tx.account.update({\n        where: { id: data.accountId },\n        data: {\n          balance: {\n            increment: netBalanceChange,\n          },\n        },\n      });\n\n      return updated;\n    });\n\n    revalidatePath(\"/dashboard\");\n    revalidatePath(`/account/${data.accountId}`);\n\n    return { success: true, data: serializeAmount(transaction) };\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\n// Get User Transactions\nexport async function getUserTransactions(query = {}) {\n  try {\n    const { userId } = await auth();\n    if (!userId) throw new Error(\"Unauthorized\");\n\n    const user = await db.user.findUnique({\n      where: { clerkUserId: userId },\n    });\n\n    if (!user) {\n      throw new Error(\"User not found\");\n    }\n\n    const transactions = await db.transaction.findMany({\n      where: {\n        userId: user.id,\n        ...query,\n      },\n      include: {\n        account: true,\n      },\n      orderBy: {\n        date: \"desc\",\n      },\n    });\n\n    return { success: true, data: transactions };\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\n// Scan Receipt\nexport async function scanReceipt(file) {\n  try {\n    const model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash\" });\n\n    // Convert File to ArrayBuffer\n    const arrayBuffer = await file.arrayBuffer();\n    // Convert ArrayBuffer to Base64\n    const base64String = Buffer.from(arrayBuffer).toString(\"base64\");\n\n    const prompt = `\n      Analyze this receipt image and extract the following information in JSON format:\n      - Total amount (just the number)\n      - Date (in ISO format)\n      - Description or items purchased (brief summary)\n      - Merchant/store name\n      - Suggested category (one of: housing,transportation,groceries,utilities,entertainment,food,shopping,healthcare,education,personal,travel,insurance,gifts,bills,other-expense )\n      \n      Only respond with valid JSON in this exact format:\n      {\n        \"amount\": number,\n        \"date\": \"ISO date string\",\n        \"description\": \"string\",\n        \"merchantName\": \"string\",\n        \"category\": \"string\"\n      }\n\n      If its not a recipt, return an empty object\n    `;\n\n    const result = await model.generateContent([\n      {\n        inlineData: {\n          data: base64String,\n          mimeType: file.type,\n        },\n      },\n      prompt,\n    ]);\n\n    const response = await result.response;\n    const text = response.text();\n    const cleanedText = text.replace(/```(?:json)?\\n?/g, \"\").trim();\n\n    try {\n      const data = JSON.parse(cleanedText);\n      return {\n        amount: parseFloat(data.amount),\n        date: new Date(data.date),\n        description: data.description,\n        category: data.category,\n        merchantName: data.merchantName,\n      };\n    } catch (parseError) {\n      console.error(\"Error parsing JSON response:\", parseError);\n      throw new Error(\"Invalid response format from Gemini\");\n    }\n  } catch (error) {\n    console.error(\"Error scanning receipt:\", error);\n    throw new Error(\"Failed to scan receipt\");\n  }\n}\n\n// Helper function to calculate next recurring date\nfunction calculateNextRecurringDate(startDate, interval) {\n  const date = new Date(startDate);\n\n  switch (interval) {\n    case \"DAILY\":\n      date.setDate(date.getDate() + 1);\n      break;\n    case \"WEEKLY\":\n      date.setDate(date.getDate() + 7);\n      break;\n    case \"MONTHLY\":\n      date.setMonth(date.getMonth() + 1);\n      break;\n    case \"YEARLY\":\n      date.setFullYear(date.getFullYear() + 1);\n      break;\n  }\n\n  return date;\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 981, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 987, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/app/%28main%29/transaction/create/page.jsx"],"sourcesContent":["import { getUserAccounts } from \"@/actions/dashboard\";\nimport { defaultCategories } from \"@/data/categories\";\nimport { AddTransactionForm } from \"../_components/transaction-form\";\nimport { getTransaction } from \"@/actions/transaction\";\n\nexport default async function AddTransactionPage({ searchParams }) {\n  const accounts = await getUserAccounts();\n  const editId = searchParams?.edit;\n\n  let initialData = null;\n  if (editId) {\n    const transaction = await getTransaction(editId);\n    initialData = transaction;\n  }\n\n  return (\n    <div className=\"max-w-3xl mx-auto px-5\">\n      <div className=\"flex justify-center md:justify-normal mb-8\">\n        <h1 className=\"text-5xl gradient-title \">Add Transaction</h1>\n      </div>\n      <AddTransactionForm\n        accounts={accounts}\n        categories={defaultCategories}\n        editMode={!!editId}\n        initialData={initialData}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEe,eAAe,mBAAmB,EAAE,YAAY,EAAE;IAC/D,MAAM,WAAW,MAAM,CAAA,GAAA,oHAAA,CAAA,kBAAe,AAAD;IACrC,MAAM,SAAS,cAAc;IAE7B,IAAI,cAAc;IAClB,IAAI,QAAQ;QACV,MAAM,cAAc,MAAM,CAAA,GAAA,sHAAA,CAAA,iBAAc,AAAD,EAAE;QACzC,cAAc;IAChB;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAG,WAAU;8BAA2B;;;;;;;;;;;0BAE3C,8OAAC,qKAAA,CAAA,qBAAkB;gBACjB,UAAU;gBACV,YAAY,kHAAA,CAAA,oBAAiB;gBAC7B,UAAU,CAAC,CAAC;gBACZ,aAAa;;;;;;;;;;;;AAIrB"}},
    {"offset": {"line": 1043, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}