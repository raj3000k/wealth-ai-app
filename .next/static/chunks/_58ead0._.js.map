{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/hooks/use-fetch.js"],"sourcesContent":["import { useState } from \"react\";\nimport { toast } from \"sonner\";\n\nconst useFetch = (cb) => {\n  const [data, setData] = useState(undefined);\n  const [loading, setLoading] = useState(null);\n  const [error, setError] = useState(null);\n\n  const fn = async (...args) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await cb(...args);\n      setData(response);\n      setError(null);\n    } catch (error) {\n      setError(error);\n      toast.error(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return { data, loading, error, fn, setData };\n};\n\nexport default useFetch;\n"],"names":[],"mappings":";;;AAAA;AACA;;;;AAEA,MAAM,WAAW,CAAC;;IAChB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,KAAK,OAAO,GAAG;QACnB,WAAW;QACX,SAAS;QAET,IAAI;YACF,MAAM,WAAW,MAAM,MAAM;YAC7B,QAAQ;YACR,SAAS;QACX,EAAE,OAAO,OAAO;YACd,SAAS;YACT,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM,OAAO;QAC3B,SAAU;YACR,WAAW;QACb;IACF;IAEA,OAAO;QAAE;QAAM;QAAS;QAAO;QAAI;IAAQ;AAC7C;GAtBM;uCAwBS"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/lib/utils.js"],"sourcesContent":["import { clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAM;IAC1B,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/components/ui/button.jsx"],"sourcesContent":["import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nconst Button = React.forwardRef(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/components/ui/input.jsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef(({ className, type, ...props }, ref) => {\n  return (\n    (<input\n      type={type}\n      className={cn(\n        \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props} />)\n  );\n})\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,8JAAM,UAAU,MAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC7D,qBACG,6LAAC;QACA,MAAM;QACN,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAEf;;AACA,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/components/ui/switch.jsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent shadow-sm transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}>\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-4 w-4 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0\"\n      )} />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,uBAAS,8JAAM,UAAU,MAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxD,6LAAC,sKAAiB,IAAI;QACpB,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+XACA;QAED,GAAG,KAAK;QACT,KAAK;kBACL,cAAA,6LAAC,sKAAiB,KAAK;YACrB,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;;AAIR,OAAO,WAAW,GAAG,sKAAiB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/components/ui/select.jsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}>\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\"flex cursor-default items-center justify-center py-1\", className)}\n    {...props}>\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\"flex cursor-default items-center justify-center py-1\", className)}\n    {...props}>\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}>\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\"p-1\", position === \"popper\" &&\n          \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\")}>\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props} />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}>\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props} />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 427, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/components/ui/popover.jsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverAnchor = PopoverPrimitive.Anchor\n\nconst PopoverContent = React.forwardRef(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props} />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\n"],"names":[],"mappings":";;;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,UAAU,uKAAiB,IAAI;AAErC,MAAM,iBAAiB,uKAAiB,OAAO;AAE/C,MAAM,gBAAgB,uKAAiB,MAAM;AAE7C,MAAM,+BAAiB,8JAAM,UAAU,MAAC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAClG,6LAAC,uKAAiB,MAAM;kBACtB,cAAA,6LAAC,uKAAiB,OAAO;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAGf,eAAe,WAAW,GAAG,uKAAiB,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 477, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 483, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/components/ui/calendar.jsx"],"sourcesContent":["\"use client\";\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}) {\n  return (\n    (<DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-8 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: cn(\n          \"relative p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([aria-selected])]:bg-accent [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected].day-range-end)]:rounded-r-md\",\n          props.mode === \"range\"\n            ? \"[&:has(>.day-range-end)]:rounded-r-md [&:has(>.day-range-start)]:rounded-l-md first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md\"\n            : \"[&:has([aria-selected])]:rounded-md\"\n        ),\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-8 w-8 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_start: \"day-range-start\",\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ...props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props} />)\n  );\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AACA;AAEA;AAEA;AACA;AAJA;AAAA;AAFA;;;;;;;AAQA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACJ;IACC,qBACG,6LAAC,iKAAA,CAAA,YAAS;QACT,iBAAiB;QACjB,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACL,qNACA,MAAM,IAAI,KAAK,UACX,yKACA;YAEN,KAAK,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,iBAAiB;YACjB,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,GAAG,OAAO,iBAAK,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;YACnD,WAAW,CAAC,EAAE,GAAG,OAAO,iBAAK,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAU;;;;;;QACvD;QACC,GAAG,KAAK;;;;;;AAEf;KAxDS;AAyDT,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 564, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 570, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/components/ui/drawer.jsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}) => (\n  <DrawerPrimitive.Root shouldScaleBackground={shouldScaleBackground} {...props} />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props} />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}>\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props} />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}) => (\n  <div className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)} {...props} />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold leading-none tracking-tight\", className)}\n    {...props} />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props} />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,SAAS,CAAC,EACd,wBAAwB,IAAI,EAC5B,GAAG,OACJ,iBACC,6LAAC,yIAAA,CAAA,SAAe,CAAC,IAAI;QAAC,uBAAuB;QAAwB,GAAG,KAAK;;;;;;KAJzE;AAMN,OAAO,WAAW,GAAG;AAErB,MAAM,gBAAgB,yIAAA,CAAA,SAAe,CAAC,OAAO;AAE7C,MAAM,eAAe,yIAAA,CAAA,SAAe,CAAC,MAAM;AAE3C,MAAM,cAAc,yIAAA,CAAA,SAAe,CAAC,KAAK;AAEzC,MAAM,8BAAgB,8JAAM,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC/D,6LAAC,yIAAA,CAAA,SAAe,CAAC,OAAO;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,kCAAkC;QAC/C,GAAG,KAAK;;;;;;MAJP;AAMN,cAAc,WAAW,GAAG,yIAAA,CAAA,SAAe,CAAC,OAAO,CAAC,WAAW;AAE/D,MAAM,8BAAgB,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACzE,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,yIAAA,CAAA,SAAe,CAAC,OAAO;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kGACA;gBAED,GAAG,KAAK;;kCACT,6LAAC;wBAAI,WAAU;;;;;;oBACd;;;;;;;;;;;;;;AAIP,cAAc,WAAW,GAAG;AAE5B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACJ,iBACC,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;MANP;AAQN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACJ,iBACC,6LAAC;QAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,mCAAmC;QAAa,GAAG,KAAK;;;;;;MAJvE;AAMN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,6LAAC,yIAAA,CAAA,SAAe,CAAC,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,qDAAqD;QAClE,GAAG,KAAK;;;;;;;AAEb,YAAY,WAAW,GAAG,yIAAA,CAAA,SAAe,CAAC,KAAK,CAAC,WAAW;AAE3D,MAAM,kCAAoB,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACnE,6LAAC,yIAAA,CAAA,SAAe,CAAC,WAAW;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAEb,kBAAkB,WAAW,GAAG,yIAAA,CAAA,SAAe,CAAC,WAAW,CAAC,WAAW"}},
    {"offset": {"line": 706, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 712, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/actions/dashboard.js"],"sourcesContent":["\"use server\";\n\nimport aj from \"@/lib/arcjet\";\nimport { db } from \"@/lib/prisma\";\nimport { request } from \"@arcjet/next\";\nimport { auth } from \"@clerk/nextjs/server\";\nimport { revalidatePath } from \"next/cache\";\n\nconst serializeTransaction = (obj) => {\n  const serialized = { ...obj };\n  if (obj.balance) {\n    serialized.balance = obj.balance.toNumber();\n  }\n  if (obj.amount) {\n    serialized.amount = obj.amount.toNumber();\n  }\n  return serialized;\n};\n\nexport async function getUserAccounts() {\n  const { userId } = await auth();\n  if (!userId) throw new Error(\"Unauthorized\");\n\n  const user = await db.user.findUnique({\n    where: { clerkUserId: userId },\n  });\n\n  if (!user) {\n    throw new Error(\"User not found\");\n  }\n\n  try {\n    const accounts = await db.account.findMany({\n      where: { userId: user.id },\n      orderBy: { createdAt: \"desc\" },\n      include: {\n        _count: {\n          select: {\n            transactions: true,\n          },\n        },\n      },\n    });\n\n    // Serialize accounts before sending to client\n    const serializedAccounts = accounts.map(serializeTransaction);\n\n    return serializedAccounts;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport async function createAccount(data) {\n  try {\n    const { userId } = await auth();\n    if (!userId) throw new Error(\"Unauthorized\");\n\n    // Get request data for ArcJet\n    const req = await request();\n\n    // Check rate limit\n    const decision = await aj.protect(req, {\n      userId,\n      requested: 1, // Specify how many tokens to consume\n    });\n\n    if (decision.isDenied()) {\n      if (decision.reason.isRateLimit()) {\n        const { remaining, reset } = decision.reason;\n        console.error({\n          code: \"RATE_LIMIT_EXCEEDED\",\n          details: {\n            remaining,\n            resetInSeconds: reset,\n          },\n        });\n\n        throw new Error(\"Too many requests. Please try again later.\");\n      }\n\n      throw new Error(\"Request blocked\");\n    }\n\n    const user = await db.user.findUnique({\n      where: { clerkUserId: userId },\n    });\n\n    if (!user) {\n      throw new Error(\"User not found\");\n    }\n\n    // Convert balance to float before saving\n    const balanceFloat = parseFloat(data.balance);\n    if (isNaN(balanceFloat)) {\n      throw new Error(\"Invalid balance amount\");\n    }\n\n    // Check if this is the user's first account\n    const existingAccounts = await db.account.findMany({\n      where: { userId: user.id },\n    });\n\n    // If it's the first account, make it default regardless of user input\n    // If not, use the user's preference\n    const shouldBeDefault =\n      existingAccounts.length === 0 ? true : data.isDefault;\n\n    // If this account should be default, unset other default accounts\n    if (shouldBeDefault) {\n      await db.account.updateMany({\n        where: { userId: user.id, isDefault: true },\n        data: { isDefault: false },\n      });\n    }\n\n    // Create new account\n    const account = await db.account.create({\n      data: {\n        ...data,\n        balance: balanceFloat,\n        userId: user.id,\n        isDefault: shouldBeDefault, // Override the isDefault based on our logic\n      },\n    });\n\n    // Serialize the account before returning\n    const serializedAccount = serializeTransaction(account);\n\n    revalidatePath(\"/dashboard\");\n    return { success: true, data: serializedAccount };\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport async function getDashboardData() {\n  const { userId } = await auth();\n  if (!userId) throw new Error(\"Unauthorized\");\n\n  const user = await db.user.findUnique({\n    where: { clerkUserId: userId },\n  });\n\n  if (!user) {\n    throw new Error(\"User not found\");\n  }\n\n  // Get all user transactions\n  const transactions = await db.transaction.findMany({\n    where: { userId: user.id },\n    orderBy: { date: \"desc\" },\n  });\n\n  return transactions.map(serializeTransaction);\n}\n"],"names":[],"mappings":";;;;;;;IAmBsB;IAkCA;IAmFA"}},
    {"offset": {"line": 722, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 728, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/app/lib/schema.js"],"sourcesContent":["import { z } from \"zod\";\n\nexport const accountSchema = z.object({\n  name: z.string().min(1, \"Name is required\"),\n  type: z.enum([\"CURRENT\", \"SAVINGS\"]),\n  balance: z.string().min(1, \"Initial balance is required\"),\n  isDefault: z.boolean().default(false),\n});\n\nexport const transactionSchema = z\n  .object({\n    type: z.enum([\"INCOME\", \"EXPENSE\"]),\n    amount: z.string().min(1, \"Amount is required\"),\n    description: z.string().optional(),\n    date: z.date({ required_error: \"Date is required\" }),\n    accountId: z.string().min(1, \"Account is required\"),\n    category: z.string().min(1, \"Category is required\"),\n    isRecurring: z.boolean().default(false),\n    recurringInterval: z\n      .enum([\"DAILY\", \"WEEKLY\", \"MONTHLY\", \"YEARLY\"])\n      .optional(),\n  })\n  .superRefine((data, ctx) => {\n    if (data.isRecurring && !data.recurringInterval) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Recurring interval is required for recurring transactions\",\n        path: [\"recurringInterval\"],\n      });\n    }\n  });\n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,gBAAgB,qKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,MAAM,qKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACxB,MAAM,qKAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAW;KAAU;IACnC,SAAS,qKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC3B,WAAW,qKAAA,CAAA,IAAC,CAAC,OAAO,GAAG,OAAO,CAAC;AACjC;AAEO,MAAM,oBAAoB,qKAAA,CAAA,IAAC,CAC/B,MAAM,CAAC;IACN,MAAM,qKAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAU;KAAU;IAClC,QAAQ,qKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC1B,aAAa,qKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAChC,MAAM,qKAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAE,gBAAgB;IAAmB;IAClD,WAAW,qKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,UAAU,qKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,aAAa,qKAAA,CAAA,IAAC,CAAC,OAAO,GAAG,OAAO,CAAC;IACjC,mBAAmB,qKAAA,CAAA,IAAC,CACjB,IAAI,CAAC;QAAC;QAAS;QAAU;QAAW;KAAS,EAC7C,QAAQ;AACb,GACC,WAAW,CAAC,CAAC,MAAM;IAClB,IAAI,KAAK,WAAW,IAAI,CAAC,KAAK,iBAAiB,EAAE;QAC/C,IAAI,QAAQ,CAAC;YACX,MAAM,qKAAA,CAAA,IAAC,CAAC,YAAY,CAAC,MAAM;YAC3B,SAAS;YACT,MAAM;gBAAC;aAAoB;QAC7B;IACF;AACF"}},
    {"offset": {"line": 776, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 782, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/components/create-account-drawer.jsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Loader2 } from \"lucide-react\";\nimport useFetch from \"@/hooks/use-fetch\";\nimport { toast } from \"sonner\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Drawer,\n  DrawerContent,\n  DrawerHeader,\n  DrawerTitle,\n  DrawerTrigger,\n  DrawerClose,\n} from \"@/components/ui/drawer\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { createAccount } from \"@/actions/dashboard\";\nimport { accountSchema } from \"@/app/lib/schema\";\n\nexport function CreateAccountDrawer({ children }) {\n  const [open, setOpen] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n    watch,\n    reset,\n  } = useForm({\n    resolver: zodResolver(accountSchema),\n    defaultValues: {\n      name: \"\",\n      type: \"CURRENT\",\n      balance: \"\",\n      isDefault: false,\n    },\n  });\n\n  const {\n    loading: createAccountLoading,\n    fn: createAccountFn,\n    error,\n    data: newAccount,\n  } = useFetch(createAccount);\n\n  const onSubmit = async (data) => {\n    await createAccountFn(data);\n  };\n\n  useEffect(() => {\n    if (newAccount) {\n      toast.success(\"Account created successfully\");\n      reset();\n      setOpen(false);\n    }\n  }, [newAccount, reset]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error.message || \"Failed to create account\");\n    }\n  }, [error]);\n\n  return (\n    <Drawer open={open} onOpenChange={setOpen}>\n      <DrawerTrigger asChild>{children}</DrawerTrigger>\n      <DrawerContent>\n        <DrawerHeader>\n          <DrawerTitle>Create New Account</DrawerTitle>\n        </DrawerHeader>\n        <div className=\"px-4 pb-4\">\n          <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <label\n                htmlFor=\"name\"\n                className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n              >\n                Account Name\n              </label>\n              <Input\n                id=\"name\"\n                placeholder=\"e.g., Main Checking\"\n                {...register(\"name\")}\n              />\n              {errors.name && (\n                <p className=\"text-sm text-red-500\">{errors.name.message}</p>\n              )}\n            </div>\n\n            <div className=\"space-y-2\">\n              <label\n                htmlFor=\"type\"\n                className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n              >\n                Account Type\n              </label>\n              <Select\n                onValueChange={(value) => setValue(\"type\", value)}\n                defaultValue={watch(\"type\")}\n              >\n                <SelectTrigger id=\"type\">\n                  <SelectValue placeholder=\"Select type\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"CURRENT\">Current</SelectItem>\n                  <SelectItem value=\"SAVINGS\">Savings</SelectItem>\n                </SelectContent>\n              </Select>\n              {errors.type && (\n                <p className=\"text-sm text-red-500\">{errors.type.message}</p>\n              )}\n            </div>\n\n            <div className=\"space-y-2\">\n              <label\n                htmlFor=\"balance\"\n                className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n              >\n                Initial Balance\n              </label>\n              <Input\n                id=\"balance\"\n                type=\"number\"\n                step=\"0.01\"\n                placeholder=\"0.00\"\n                {...register(\"balance\")}\n              />\n              {errors.balance && (\n                <p className=\"text-sm text-red-500\">{errors.balance.message}</p>\n              )}\n            </div>\n\n            <div className=\"flex items-center justify-between rounded-lg border p-3\">\n              <div className=\"space-y-0.5\">\n                <label\n                  htmlFor=\"isDefault\"\n                  className=\"text-base font-medium cursor-pointer\"\n                >\n                  Set as Default\n                </label>\n                <p className=\"text-sm text-muted-foreground\">\n                  This account will be selected by default for transactions\n                </p>\n              </div>\n              <Switch\n                id=\"isDefault\"\n                checked={watch(\"isDefault\")}\n                onCheckedChange={(checked) => setValue(\"isDefault\", checked)}\n              />\n            </div>\n\n            <div className=\"flex gap-4 pt-4\">\n              <DrawerClose asChild>\n                <Button type=\"button\" variant=\"outline\" className=\"flex-1\">\n                  Cancel\n                </Button>\n              </DrawerClose>\n              <Button\n                type=\"submit\"\n                className=\"flex-1\"\n                disabled={createAccountLoading}\n              >\n                {createAccountLoading ? (\n                  <>\n                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                    Creating...\n                  </>\n                ) : (\n                  \"Create Account\"\n                )}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </DrawerContent>\n    </Drawer>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1164, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/actions/transaction.js"],"sourcesContent":["\"use server\";\n\nimport { auth } from \"@clerk/nextjs/server\";\nimport { db } from \"@/lib/prisma\";\nimport { revalidatePath } from \"next/cache\";\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\nimport aj from \"@/lib/arcjet\";\nimport { request } from \"@arcjet/next\";\n\nconst genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);\n\nconst serializeAmount = (obj) => ({\n  ...obj,\n  amount: obj.amount.toNumber(),\n});\n\n// Create Transaction\nexport async function createTransaction(data) {\n  try {\n    const { userId } = await auth();\n    if (!userId) throw new Error(\"Unauthorized\");\n\n    // Get request data for ArcJet\n    const req = await request();\n\n    // Check rate limit\n    const decision = await aj.protect(req, {\n      userId,\n      requested: 1, // Specify how many tokens to consume\n    });\n\n    if (decision.isDenied()) {\n      if (decision.reason.isRateLimit()) {\n        const { remaining, reset } = decision.reason;\n        console.error({\n          code: \"RATE_LIMIT_EXCEEDED\",\n          details: {\n            remaining,\n            resetInSeconds: reset,\n          },\n        });\n\n        throw new Error(\"Too many requests. Please try again later.\");\n      }\n\n      throw new Error(\"Request blocked\");\n    }\n\n    const user = await db.user.findUnique({\n      where: { clerkUserId: userId },\n    });\n\n    if (!user) {\n      throw new Error(\"User not found\");\n    }\n\n    const account = await db.account.findUnique({\n      where: {\n        id: data.accountId,\n        userId: user.id,\n      },\n    });\n\n    if (!account) {\n      throw new Error(\"Account not found\");\n    }\n\n    // Calculate new balance\n    const balanceChange = data.type === \"EXPENSE\" ? -data.amount : data.amount;\n    const newBalance = account.balance.toNumber() + balanceChange;\n\n    // Create transaction and update account balance\n    const transaction = await db.$transaction(async (tx) => {\n      const newTransaction = await tx.transaction.create({\n        data: {\n          ...data,\n          userId: user.id,\n          nextRecurringDate:\n            data.isRecurring && data.recurringInterval\n              ? calculateNextRecurringDate(data.date, data.recurringInterval)\n              : null,\n        },\n      });\n\n      await tx.account.update({\n        where: { id: data.accountId },\n        data: { balance: newBalance },\n      });\n\n      return newTransaction;\n    });\n\n    revalidatePath(\"/dashboard\");\n    revalidatePath(`/account/${transaction.accountId}`);\n\n    return { success: true, data: serializeAmount(transaction) };\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport async function getTransaction(id) {\n  const { userId } = await auth();\n  if (!userId) throw new Error(\"Unauthorized\");\n\n  const user = await db.user.findUnique({\n    where: { clerkUserId: userId },\n  });\n\n  if (!user) throw new Error(\"User not found\");\n\n  const transaction = await db.transaction.findUnique({\n    where: {\n      id,\n      userId: user.id,\n    },\n  });\n\n  if (!transaction) throw new Error(\"Transaction not found\");\n\n  return serializeAmount(transaction);\n}\n\nexport async function updateTransaction(id, data) {\n  try {\n    const { userId } = await auth();\n    if (!userId) throw new Error(\"Unauthorized\");\n\n    const user = await db.user.findUnique({\n      where: { clerkUserId: userId },\n    });\n\n    if (!user) throw new Error(\"User not found\");\n\n    // Get original transaction to calculate balance change\n    const originalTransaction = await db.transaction.findUnique({\n      where: {\n        id,\n        userId: user.id,\n      },\n      include: {\n        account: true,\n      },\n    });\n\n    if (!originalTransaction) throw new Error(\"Transaction not found\");\n\n    // Calculate balance changes\n    const oldBalanceChange =\n      originalTransaction.type === \"EXPENSE\"\n        ? -originalTransaction.amount.toNumber()\n        : originalTransaction.amount.toNumber();\n\n    const newBalanceChange =\n      data.type === \"EXPENSE\" ? -data.amount : data.amount;\n\n    const netBalanceChange = newBalanceChange - oldBalanceChange;\n\n    // Update transaction and account balance in a transaction\n    const transaction = await db.$transaction(async (tx) => {\n      const updated = await tx.transaction.update({\n        where: {\n          id,\n          userId: user.id,\n        },\n        data: {\n          ...data,\n          nextRecurringDate:\n            data.isRecurring && data.recurringInterval\n              ? calculateNextRecurringDate(data.date, data.recurringInterval)\n              : null,\n        },\n      });\n\n      // Update account balance\n      await tx.account.update({\n        where: { id: data.accountId },\n        data: {\n          balance: {\n            increment: netBalanceChange,\n          },\n        },\n      });\n\n      return updated;\n    });\n\n    revalidatePath(\"/dashboard\");\n    revalidatePath(`/account/${data.accountId}`);\n\n    return { success: true, data: serializeAmount(transaction) };\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\n// Get User Transactions\nexport async function getUserTransactions(query = {}) {\n  try {\n    const { userId } = await auth();\n    if (!userId) throw new Error(\"Unauthorized\");\n\n    const user = await db.user.findUnique({\n      where: { clerkUserId: userId },\n    });\n\n    if (!user) {\n      throw new Error(\"User not found\");\n    }\n\n    const transactions = await db.transaction.findMany({\n      where: {\n        userId: user.id,\n        ...query,\n      },\n      include: {\n        account: true,\n      },\n      orderBy: {\n        date: \"desc\",\n      },\n    });\n\n    return { success: true, data: transactions };\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\n// Scan Receipt\nexport async function scanReceipt(file) {\n  try {\n    const model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash\" });\n\n    // Convert File to ArrayBuffer\n    const arrayBuffer = await file.arrayBuffer();\n    // Convert ArrayBuffer to Base64\n    const base64String = Buffer.from(arrayBuffer).toString(\"base64\");\n\n    const prompt = `\n      Analyze this receipt image and extract the following information in JSON format:\n      - Total amount (just the number)\n      - Date (in ISO format)\n      - Description or items purchased (brief summary)\n      - Merchant/store name\n      - Suggested category (one of: housing,transportation,groceries,utilities,entertainment,food,shopping,healthcare,education,personal,travel,insurance,gifts,bills,other-expense )\n      \n      Only respond with valid JSON in this exact format:\n      {\n        \"amount\": number,\n        \"date\": \"ISO date string\",\n        \"description\": \"string\",\n        \"merchantName\": \"string\",\n        \"category\": \"string\"\n      }\n\n      If its not a recipt, return an empty object\n    `;\n\n    const result = await model.generateContent([\n      {\n        inlineData: {\n          data: base64String,\n          mimeType: file.type,\n        },\n      },\n      prompt,\n    ]);\n\n    const response = await result.response;\n    const text = response.text();\n    const cleanedText = text.replace(/```(?:json)?\\n?/g, \"\").trim();\n\n    try {\n      const data = JSON.parse(cleanedText);\n      return {\n        amount: parseFloat(data.amount),\n        date: new Date(data.date),\n        description: data.description,\n        category: data.category,\n        merchantName: data.merchantName,\n      };\n    } catch (parseError) {\n      console.error(\"Error parsing JSON response:\", parseError);\n      throw new Error(\"Invalid response format from Gemini\");\n    }\n  } catch (error) {\n    console.error(\"Error scanning receipt:\", error);\n    throw new Error(\"Failed to scan receipt\");\n  }\n}\n\n// Helper function to calculate next recurring date\nfunction calculateNextRecurringDate(startDate, interval) {\n  const date = new Date(startDate);\n\n  switch (interval) {\n    case \"DAILY\":\n      date.setDate(date.getDate() + 1);\n      break;\n    case \"WEEKLY\":\n      date.setDate(date.getDate() + 7);\n      break;\n    case \"MONTHLY\":\n      date.setMonth(date.getMonth() + 1);\n      break;\n    case \"YEARLY\":\n      date.setFullYear(date.getFullYear() + 1);\n      break;\n  }\n\n  return date;\n}\n"],"names":[],"mappings":";;;;;;;;;IAiBsB;IAoFA;IAsBA;IA0EA;IAiCA"}},
    {"offset": {"line": 1178, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1184, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/app/%28main%29/transaction/_components/recipt-scanner.jsx"],"sourcesContent":["\"use client\";\n\nimport { useRef, useEffect } from \"react\";\nimport { Camera, Loader2 } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { toast } from \"sonner\";\nimport useFetch from \"@/hooks/use-fetch\";\nimport { scanReceipt } from \"@/actions/transaction\";\n\nexport function ReceiptScanner({ onScanComplete }) {\n  const fileInputRef = useRef(null);\n\n  const {\n    loading: scanReceiptLoading,\n    fn: scanReceiptFn,\n    data: scannedData,\n  } = useFetch(scanReceipt);\n\n  const handleReceiptScan = async (file) => {\n    if (file.size > 5 * 1024 * 1024) {\n      toast.error(\"File size should be less than 5MB\");\n      return;\n    }\n\n    await scanReceiptFn(file);\n  };\n\n  useEffect(() => {\n    if (scannedData && !scanReceiptLoading) {\n      onScanComplete(scannedData);\n      toast.success(\"Receipt scanned successfully\");\n    }\n  }, [scanReceiptLoading, scannedData]);\n\n  return (\n    <div className=\"flex items-center gap-4\">\n      <input\n        type=\"file\"\n        ref={fileInputRef}\n        className=\"hidden\"\n        accept=\"image/*\"\n        capture=\"environment\"\n        onChange={(e) => {\n          const file = e.target.files?.[0];\n          if (file) handleReceiptScan(file);\n        }}\n      />\n      <Button\n        type=\"button\"\n        variant=\"outline\"\n        className=\"w-full h-10 bg-gradient-to-br from-orange-500 via-pink-500 to-purple-500 animate-gradient hover:opacity-90 transition-opacity text-white hover:text-white\"\n        onClick={() => fileInputRef.current?.click()}\n        disabled={scanReceiptLoading}\n      >\n        {scanReceiptLoading ? (\n          <>\n            <Loader2 className=\"mr-2 animate-spin\" />\n            <span>Scanning Receipt...</span>\n          </>\n        ) : (\n          <>\n            <Camera className=\"mr-2\" />\n            <span>Scan Receipt with AI</span>\n          </>\n        )}\n      </Button>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAAA;;;AAHA;;;;;;;AASO,SAAS,eAAe,EAAE,cAAc,EAAE;;IAC/C,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAE5B,MAAM,EACJ,SAAS,kBAAkB,EAC3B,IAAI,aAAa,EACjB,MAAM,WAAW,EAClB,GAAG,CAAA,GAAA,wHAAA,CAAA,UAAQ,AAAD,EAAE,yHAAA,CAAA,cAAW;IAExB,MAAM,oBAAoB,OAAO;QAC/B,IAAI,KAAK,IAAI,GAAG,IAAI,OAAO,MAAM;YAC/B,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ;QACF;QAEA,MAAM,cAAc;IACtB;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,IAAI,eAAe,CAAC,oBAAoB;gBACtC,eAAe;gBACf,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YAChB;QACF;mCAAG;QAAC;QAAoB;KAAY;IAEpC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBACC,MAAK;gBACL,KAAK;gBACL,WAAU;gBACV,QAAO;gBACP,SAAQ;gBACR,UAAU,CAAC;oBACT,MAAM,OAAO,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;oBAChC,IAAI,MAAM,kBAAkB;gBAC9B;;;;;;0BAEF,6LAAC,8HAAA,CAAA,SAAM;gBACL,MAAK;gBACL,SAAQ;gBACR,WAAU;gBACV,SAAS,IAAM,aAAa,OAAO,EAAE;gBACrC,UAAU;0BAET,mCACC;;sCACE,6LAAC,oNAAA,CAAA,UAAO;4BAAC,WAAU;;;;;;sCACnB,6LAAC;sCAAK;;;;;;;iDAGR;;sCACE,6LAAC,yMAAA,CAAA,SAAM;4BAAC,WAAU;;;;;;sCAClB,6LAAC;sCAAK;;;;;;;;;;;;;;;;;;;AAMlB;GA3DgB;;QAOV,wHAAA,CAAA,UAAQ;;;KAPE"}},
    {"offset": {"line": 1308, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1314, "column": 0}, "map": {"version":3,"sources":["file:///Users/rajmotwani/Downloads/wealth-ai-app/app/%28main%29/transaction/_components/transaction-form.jsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { CalendarIcon, Loader2 } from \"lucide-react\";\nimport { format } from \"date-fns\";\nimport { useRouter, useSearchParams } from \"next/navigation\";\nimport useFetch from \"@/hooks/use-fetch\";\nimport { toast } from \"sonner\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Switch } from \"@/components/ui/switch\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { CreateAccountDrawer } from \"@/components/create-account-drawer\";\nimport { cn } from \"@/lib/utils\";\nimport { createTransaction, updateTransaction } from \"@/actions/transaction\";\nimport { transactionSchema } from \"@/app/lib/schema\";\nimport { ReceiptScanner } from \"./recipt-scanner\";\n\nexport function AddTransactionForm({\n  accounts,\n  categories,\n  editMode = false,\n  initialData = null,\n}) {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const editId = searchParams.get(\"edit\");\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    watch,\n    setValue,\n    getValues,\n    reset,\n  } = useForm({\n    resolver: zodResolver(transactionSchema),\n    defaultValues:\n      editMode && initialData\n        ? {\n            type: initialData.type,\n            amount: initialData.amount.toString(),\n            description: initialData.description,\n            accountId: initialData.accountId,\n            category: initialData.category,\n            date: new Date(initialData.date),\n            isRecurring: initialData.isRecurring,\n            ...(initialData.recurringInterval && {\n              recurringInterval: initialData.recurringInterval,\n            }),\n          }\n        : {\n            type: \"EXPENSE\",\n            amount: \"\",\n            description: \"\",\n            accountId: accounts.find((ac) => ac.isDefault)?.id,\n            date: new Date(),\n            isRecurring: false,\n          },\n  });\n\n  const {\n    loading: transactionLoading,\n    fn: transactionFn,\n    data: transactionResult,\n  } = useFetch(editMode ? updateTransaction : createTransaction);\n\n  const onSubmit = (data) => {\n    const formData = {\n      ...data,\n      amount: parseFloat(data.amount),\n    };\n\n    if (editMode) {\n      transactionFn(editId, formData);\n    } else {\n      transactionFn(formData);\n    }\n  };\n\n  const handleScanComplete = (scannedData) => {\n    if (scannedData) {\n      setValue(\"amount\", scannedData.amount.toString());\n      setValue(\"date\", new Date(scannedData.date));\n      if (scannedData.description) {\n        setValue(\"description\", scannedData.description);\n      }\n      if (scannedData.category) {\n        setValue(\"category\", scannedData.category);\n      }\n      toast.success(\"Receipt scanned successfully\");\n    }\n  };\n\n  useEffect(() => {\n    if (transactionResult?.success && !transactionLoading) {\n      toast.success(\n        editMode\n          ? \"Transaction updated successfully\"\n          : \"Transaction created successfully\"\n      );\n      reset();\n      router.push(`/account/${transactionResult.data.accountId}`);\n    }\n  }, [transactionResult, transactionLoading, editMode]);\n\n  const type = watch(\"type\");\n  const isRecurring = watch(\"isRecurring\");\n  const date = watch(\"date\");\n\n  const filteredCategories = categories.filter(\n    (category) => category.type === type\n  );\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n      {/* Receipt Scanner - Only show in create mode */}\n      {!editMode && <ReceiptScanner onScanComplete={handleScanComplete} />}\n\n      {/* Type */}\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Type</label>\n        <Select\n          onValueChange={(value) => setValue(\"type\", value)}\n          defaultValue={type}\n        >\n          <SelectTrigger>\n            <SelectValue placeholder=\"Select type\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"EXPENSE\">Expense</SelectItem>\n            <SelectItem value=\"INCOME\">Income</SelectItem>\n          </SelectContent>\n        </Select>\n        {errors.type && (\n          <p className=\"text-sm text-red-500\">{errors.type.message}</p>\n        )}\n      </div>\n\n      {/* Amount and Account */}\n      <div className=\"grid gap-6 md:grid-cols-2\">\n        <div className=\"space-y-2\">\n          <label className=\"text-sm font-medium\">Amount</label>\n          <Input\n            type=\"number\"\n            step=\"0.01\"\n            placeholder=\"0.00\"\n            {...register(\"amount\")}\n          />\n          {errors.amount && (\n            <p className=\"text-sm text-red-500\">{errors.amount.message}</p>\n          )}\n        </div>\n\n        <div className=\"space-y-2\">\n          <label className=\"text-sm font-medium\">Account</label>\n          <Select\n            onValueChange={(value) => setValue(\"accountId\", value)}\n            defaultValue={getValues(\"accountId\")}\n          >\n            <SelectTrigger>\n              <SelectValue placeholder=\"Select account\" />\n            </SelectTrigger>\n            <SelectContent>\n              {accounts.map((account) => (\n                <SelectItem key={account.id} value={account.id}>\n                  {account.name} (${parseFloat(account.balance).toFixed(2)})\n                </SelectItem>\n              ))}\n              <CreateAccountDrawer>\n                <Button\n                  variant=\"ghost\"\n                  className=\"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none hover:bg-accent hover:text-accent-foreground\"\n                >\n                  Create Account\n                </Button>\n              </CreateAccountDrawer>\n            </SelectContent>\n          </Select>\n          {errors.accountId && (\n            <p className=\"text-sm text-red-500\">{errors.accountId.message}</p>\n          )}\n        </div>\n      </div>\n\n      {/* Category */}\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Category</label>\n        <Select\n          onValueChange={(value) => setValue(\"category\", value)}\n          defaultValue={getValues(\"category\")}\n        >\n          <SelectTrigger>\n            <SelectValue placeholder=\"Select category\" />\n          </SelectTrigger>\n          <SelectContent>\n            {filteredCategories.map((category) => (\n              <SelectItem key={category.id} value={category.id}>\n                {category.name}\n              </SelectItem>\n            ))}\n          </SelectContent>\n        </Select>\n        {errors.category && (\n          <p className=\"text-sm text-red-500\">{errors.category.message}</p>\n        )}\n      </div>\n\n      {/* Date */}\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Date</label>\n        <Popover>\n          <PopoverTrigger asChild>\n            <Button\n              variant=\"outline\"\n              className={cn(\n                \"w-full pl-3 text-left font-normal\",\n                !date && \"text-muted-foreground\"\n              )}\n            >\n              {date ? format(date, \"PPP\") : <span>Pick a date</span>}\n              <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n            </Button>\n          </PopoverTrigger>\n          <PopoverContent className=\"w-auto p-0\" align=\"start\">\n            <Calendar\n              mode=\"single\"\n              selected={date}\n              onSelect={(date) => setValue(\"date\", date)}\n              disabled={(date) =>\n                date > new Date() || date < new Date(\"1900-01-01\")\n              }\n              initialFocus\n            />\n          </PopoverContent>\n        </Popover>\n        {errors.date && (\n          <p className=\"text-sm text-red-500\">{errors.date.message}</p>\n        )}\n      </div>\n\n      {/* Description */}\n      <div className=\"space-y-2\">\n        <label className=\"text-sm font-medium\">Description</label>\n        <Input placeholder=\"Enter description\" {...register(\"description\")} />\n        {errors.description && (\n          <p className=\"text-sm text-red-500\">{errors.description.message}</p>\n        )}\n      </div>\n\n      {/* Recurring Toggle */}\n      <div className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\n        <div className=\"space-y-0.5\">\n          <label className=\"text-base font-medium\">Recurring Transaction</label>\n          <div className=\"text-sm text-muted-foreground\">\n            Set up a recurring schedule for this transaction\n          </div>\n        </div>\n        <Switch\n          checked={isRecurring}\n          onCheckedChange={(checked) => setValue(\"isRecurring\", checked)}\n        />\n      </div>\n\n      {/* Recurring Interval */}\n      {isRecurring && (\n        <div className=\"space-y-2\">\n          <label className=\"text-sm font-medium\">Recurring Interval</label>\n          <Select\n            onValueChange={(value) => setValue(\"recurringInterval\", value)}\n            defaultValue={getValues(\"recurringInterval\")}\n          >\n            <SelectTrigger>\n              <SelectValue placeholder=\"Select interval\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"DAILY\">Daily</SelectItem>\n              <SelectItem value=\"WEEKLY\">Weekly</SelectItem>\n              <SelectItem value=\"MONTHLY\">Monthly</SelectItem>\n              <SelectItem value=\"YEARLY\">Yearly</SelectItem>\n            </SelectContent>\n          </Select>\n          {errors.recurringInterval && (\n            <p className=\"text-sm text-red-500\">\n              {errors.recurringInterval.message}\n            </p>\n          )}\n        </div>\n      )}\n\n      {/* Actions */}\n      <div className=\"flex gap-4\">\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          className=\"w-full\"\n          onClick={() => router.back()}\n        >\n          Cancel\n        </Button>\n        <Button type=\"submit\" className=\"w-full\" disabled={transactionLoading}>\n          {transactionLoading ? (\n            <>\n              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n              {editMode ? \"Updating...\" : \"Creating...\"}\n            </>\n          ) : editMode ? (\n            \"Update Transaction\"\n          ) : (\n            \"Create Transaction\"\n          )}\n        </Button>\n      </div>\n    </form>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2012, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}